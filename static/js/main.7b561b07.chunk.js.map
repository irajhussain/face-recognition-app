{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calculateFaceLocation","data","clarifyFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","console","log","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","error","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"iUAkBeA,EAhBI,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cACpB,OADmD,EAAhBC,WAGjC,yBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,aAC9C,uBAAGC,QAAW,kBAAML,EAAc,YAClCM,UAAU,2CADV,aAMD,yBAAKJ,MAAO,CAACC,QAAS,OAAQC,eAAgB,aAC9C,uBAAGC,QAAW,kBAAML,EAAc,WAAWM,UAAU,2CAAvD,UACA,uBAAGD,QAAW,kBAAML,EAAc,aAAaM,UAAU,2CAAzD,c,kCCMaC,G,OAfF,WACZ,OAEC,yBAAKD,UAAU,WACf,kBAAC,IAAD,CAAMA,UAAU,oBAChBE,QAAS,CAAEC,IAAM,IACjBP,MAAO,CAAEQ,OAAQ,IAAKC,MAAO,MAC7B,yBAAKL,UAAU,kBACf,yBAAKJ,MAAS,CAACU,WAAY,OAAOC,IAAI,OAAOC,IAAKC,WCKrCC,G,OAhBO,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,eAEtC,OACC,6BACA,uBAAGZ,UAAU,aACZ,uEAED,yBAAKA,UAAU,UACf,yBAAKA,UAAU,gCACf,2BAAOA,UAAU,qBAAqBa,KAAK,OAAOC,SAAUH,IAC5D,4BAAQX,UAAU,sDAAsDD,QAASa,GAAjF,eCEaG,EAZF,WACZ,OACC,yBAAKf,UAAU,UACf,yBAAKA,UAAU,YACd,kCAED,yBAAKA,UAAU,YACd,QCIYgB,G,OAVS,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,IACnC,OACC,yBAAKlB,UAAU,aACf,yBAAKA,UAAU,gBACf,yBAAKmB,GAAK,aAAaZ,IAAK,GAAGC,IAAKS,EAAUZ,MAAM,QAAQD,OAAO,SACnE,yBAAKJ,UAAY,eAAeJ,MAAS,CAACwB,IAAKF,EAAIG,OAAQC,MAAOJ,EAAIK,SAAUC,OAAQN,EAAIO,UAAWC,KAAMR,EAAIS,eC0BpGC,EAhCA,SAAC,GAAqB,IAApBlC,EAAmB,EAAnBA,cAChB,OACC,6BAASM,UAAU,kEACnB,0BAAMA,UAAU,gBAChB,yBAAKA,UAAU,WACf,8BAAUmB,GAAG,UAAUnB,UAAU,6BACjC,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACf,2BAAOA,UAAU,oBAAoB6B,QAAQ,iBAA7C,SACA,2BAAO7B,UAAU,qEAAqEa,KAAK,QAAQiB,KAAK,gBAAiBX,GAAG,mBAE5H,yBAAKnB,UAAU,OACf,2BAAOA,UAAU,oBAAoB6B,QAAQ,YAA7C,YACA,2BAAO7B,UAAU,uEAAuEa,KAAK,WAAWiB,KAAK,WAAYX,GAAG,eAG5H,yBAAKnB,UAAU,IACf,2BACAD,QAAW,kBAAML,EAAc,SAC/BM,UAAU,uEACVa,KAAK,SACLkB,MAAM,aAEN,yBAAK/B,UAAU,eACf,uBAAGD,QAAW,kBAAML,EAAc,aAAaM,UAAU,gCAAzD,iBCYagC,EApCE,SAAC,GAAqB,IAApBtC,EAAmB,EAAnBA,cAClB,OACC,6BAASM,UAAU,kEACnB,0BAAMA,UAAU,gBAChB,yBAAKA,UAAU,WACf,8BAAUmB,GAAG,UAAUnB,UAAU,6BACjC,4BAAQA,UAAU,kBAAlB,YAEA,yBAAKA,UAAU,OACf,2BAAOA,UAAU,oBAAoB6B,QAAQ,QAA7C,QACA,2BAAO7B,UAAU,qEAAqEa,KAAK,OAAOiB,KAAK,OAAQX,GAAG,UAGlH,yBAAKnB,UAAU,OACf,2BAAOA,UAAU,oBAAoB6B,QAAQ,iBAA7C,SACA,2BAAO7B,UAAU,qEAAqEa,KAAK,QAAQiB,KAAK,gBAAiBX,GAAG,mBAG5H,yBAAKnB,UAAU,OACf,2BAAOA,UAAU,oBAAoB6B,QAAQ,YAA7C,YACA,2BAAO7B,UAAU,uEAAuEa,KAAK,WAAWiB,KAAK,WAAYX,GAAG,eAG5H,yBAAKnB,UAAU,IACf,2BACAD,QAAW,kBAAML,EAAc,SAC/BM,UAAU,uEACVa,KAAK,SACLkB,MAAM,kB,kCChBFE,G,OAAM,IAAIC,IAASC,IAAI,CAC5BC,OAAQ,sCAGHC,EAAmB,CACvBC,UAAW,CACTC,OAAQ,CACNR,MAAO,GACPS,QAAS,CACPC,QAAQ,EACRC,WAAY,QAyFLP,E,kDAlFb,aAAe,IAAD,8BACZ,gBAUFQ,sBAAwB,SAACC,GACvB,IAAMC,EAAcD,EAAKE,QAAQ,GAAGF,KAAKG,QAAQ,GAAGC,YAAYC,aAC1DC,EAAQC,SAASC,eAAe,cAChC/C,EAAQgD,OAAOH,EAAM7C,OACrBD,EAASiD,OAAOH,EAAM9C,QAC5B,MAAO,CACLuB,QAASkB,EAAYS,SAAWjD,EAChCgB,OAAQwB,EAAYU,QAAUnD,EAC9BmB,SAAUlB,EAASwC,EAAYW,UAAYnD,EAC3CoB,UAAWrB,EAAUyC,EAAYY,WAAarD,IApBpC,EAwBdsD,eAAiB,SAACxC,GAChB,EAAKyC,SAAS,CAACzC,IAAKA,IACpB0C,QAAQC,IAAI3C,IA1BA,EA6BdP,cAAgB,SAACmD,GACf,EAAKH,SAAS,CAACI,MAAOD,EAAME,OAAOjC,SA9BvB,EAiCdnB,eAAiB,WACf,EAAK+C,SAAS,CAAC1C,SAAU,EAAKgD,MAAMF,QAEpC9B,EAAIiC,OACHC,QACCjC,IAASkC,kBACT,EAAKH,MAAMF,OAEZM,MAAK,SAAAC,GAAQ,OAAI,EAAKZ,eAAe,EAAKf,sBAAsB2B,OAGhEC,OAAM,SAAAC,GAAK,OAAIZ,QAAQC,IAAI,WA5ChB,EA+CdnE,cAAgB,SAAC+E,GACF,YAAVA,EACD,EAAKd,SAAS,CAAChE,YAAY,IACT,SAAV8E,GACR,EAAKd,SAAS,CAAChE,YAAY,IAE7B,EAAKgE,SAAS,CAACc,MAAOA,KAnDtB,EAAKR,MAAQ,CACXF,MAAO,GACP9C,SAAU,GACVC,IAAK,GACLuD,MAAO,SACP9E,YAAY,GAPF,E,qDAwDJ,IAAD,EACqC+E,KAAKT,MAAzCtE,EADD,EACCA,WAAWsB,EADZ,EACYA,SAAUwD,EADtB,EACsBA,MAAOvD,EAD7B,EAC6BA,IACpC,OACE,6BACE,kBAAC,IAAD,CAAWlB,UAAU,YACnB2E,OAAQtC,IAEV,kBAAC,EAAD,CAAY3C,cAAegF,KAAKhF,cAAeC,WAAYA,IAC/C,SAAV8E,EAGE,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAe9D,cAAe+D,KAAK/D,cAAeC,eAAgB8D,KAAK9D,iBACvE,kBAAC,EAAD,CAAiBM,IAAOA,EAAKD,SAAUA,KAElB,WAArByD,KAAKT,MAAMQ,MACX,kBAAC,EAAD,CAAQ/E,cAAegF,KAAKhF,gBAC5B,kBAAC,EAAD,CAAUA,cAAegF,KAAKhF,qB,GA5ExBkF,aClBEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjC,SAASC,eAAe,SDwHpB,kBAAmBiC,WACrBA,UAAUC,cAAcC,MACrBlB,MAAK,SAAAmB,GACJA,EAAaC,gBAEdlB,OAAM,SAAAC,GACLZ,QAAQY,MAAMA,EAAMkB,a,mBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.7b561b07.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n\tif(isSignedIn) {\r\n\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t<p onClick = {() => onRouteChange('signout')} //we want to run this function whenever onClick happens.\r\n\t\t\tclassName='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t</nav>\r\n\t\t\t);\r\n\t} else\r\n\treturn (\r\n\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t<p onClick = {() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>SignIn</p>\r\n\t\t<p onClick = {() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t</nav>\r\n\t\t);\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t/*npm install --save react-tilt*/\r\n\t\t<div className='ma4 mt0'> \r\n\t\t<Tilt className=\"Tilt br2 shadow-2\" \r\n\t\toptions={{ max : 55 }} \r\n\t\tstyle={{ height: 100, width: 100 }} >\r\n\t\t<div className=\"Tilt-inner pa3\">\r\n\t\t<img style = {{paddingTop: '3px'}}alt='Logo' src={brain} /> \r\n\t\t{/*https://icons8.com/icons/set/brain*/}\r\n\t\t</div>\r\n\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n /*instead of props.onInputChange, we destructure {onInputChange}*/\r\n\treturn (\r\n\t\t<div>\r\n\t\t<p className='f3 center'>\r\n\t\t{'This Magic Brain will detect faces in your pictures. Give it a try.'}\r\n\t\t</p>\r\n\t\t<div className='center'>\r\n\t\t<div className='form center pa4 br3 shadow-5'>\r\n\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n\treturn (\r\n\t\t<div className='center'>\r\n\t\t<div className='white f3'>\r\n\t\t{'Andre, your current rank is...'}\r\n\t\t</div>\r\n\t\t<div className='white f2'>\r\n\t\t{'#5'}\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n\treturn (\r\n\t\t<div className='center ma'>\r\n\t\t<div className='absolute mt2'>\r\n\t\t<img id = 'inputimage' alt ='' src={imageUrl} width='500px' height='auto'/>\r\n\t\t<div className = 'bounding-box' style = {{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Signin = ({onRouteChange}) => {\r\n\treturn(\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t<main className=\"pa4 black-80\">\r\n\t\t<div className=\"measure\">\r\n\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t<legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t<div className=\"mt3\">\r\n\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t<input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t</div>\r\n\t\t<div className=\"mv3\">\r\n\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t<input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t</div>\r\n\t\t</fieldset>\r\n\t\t<div className=\"\">\r\n\t\t<input\r\n\t\tonClick = {() => onRouteChange('home')}\r\n\t\tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\ttype=\"submit\" \r\n\t\tvalue=\"Sign in\" />\r\n\t\t</div>\r\n\t\t<div className=\"lh-copy mt3\"> \r\n\t\t<p onClick = {() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</main>\r\n\t\t</article>\r\n\t\t);\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nconst Register = ({onRouteChange}) => {\r\n\treturn(\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t<main className=\"pa4 black-80\">\r\n\t\t<div className=\"measure\">\r\n\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t<legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\r\n\t\t<div className=\"mt3\">\r\n\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t<input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n\t\t</div>\r\n\r\n\t\t<div className=\"mt3\">\r\n\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t<input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t</div>\r\n\r\n\t\t<div className=\"mv3\">\r\n\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t<input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t</div>\r\n\t\t</fieldset>\r\n\t\t<div className=\"\">\r\n\t\t<input\r\n\t\tonClick = {() => onRouteChange('home')}\r\n\t\tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\ttype=\"submit\" \r\n\t\tvalue=\"Register\" />\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</main>\r\n\t\t</article>\r\n\t\t);\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation'; //.js by default\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport  Clarifai from 'clarifai';\nimport './App.css';\n\n//https://docs.clarifai.com/api-guide/api-overview/api-clients\n//npm install clarifai\nconst app = new Clarifai.App({\n apiKey: '363956b692bf4fbe973771a7c29ff825'\n});\n/*https://www.npmjs.com/package/react-particles-js */\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 200\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifyFace.left_col * width,\n      topRow: clarifyFace.top_row * height,\n      rightCol: width - (clarifyFace.right_col * width),\n      bottomRow: height - (clarifyFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n    console.log(box);\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    /*https://www.clarifai.com/models/face-detection-image-recognition-model-a403429f2ddf4b49b307e318f00e528b-detectionhttps://www.clarifai.com/models/face-detection-image-recognition-model-a403429f2ddf4b49b307e318f00e528b-detectionhttps://www.clarifai.com/models/face-detection-image-recognition-model-a403429f2ddf4b49b307e318f00e528b-detectionhttps://www.clarifai.com/models/face-detection-image-recognition-model-a403429f2ddf4b49b307e318f00e528b-detection*/\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input\n    )\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n    // do something with response\n    .catch(error => console.log('err'));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout') {\n      this.setState({isSignedIn: false});\n    } else if(route === 'home') {\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route}); //in curly brackets bec its an object\n  }\n\n  render() {\n    const { isSignedIn,imageUrl, route, box } = this.state;\n    return (\n      <div>\n        <Particles className='particles'\n          params={particlesOptions} \n        />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />             \n        { route === 'home' \n          //{telling its a javascript expression for using if\n          //returning multiple elements doesnt work, we need to wrap them in div, below\n          ? <div>        \n            <Logo />\n            <Rank />\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n            <FaceRecognition box = {box} imageUrl={imageUrl}/>\n          </div>\n          : this.state.route === 'signin'\n          ? <Signin onRouteChange={this.onRouteChange}/>\n          : <Register onRouteChange={this.onRouteChange}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'; /*npm install tachyons*/\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.727f23f2.png\";"],"sourceRoot":""}